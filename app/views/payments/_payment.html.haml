%tr{class: "-#{payment.get_color}"}
  %td
    %i{class: "fa fa-circle #{payment.get_color}"}
  %td.no-break
    = payment.try(:invoice).try(:invoice_date)
  %td
    %a{onclick: "window.createInvoices(#{payment.purchase_order.id},'#{payment.purchase_order.formated_folio}',#{payment.purchase_order.construction.id})", class: 'no-break', data: { toggle: 'tooltip', placement: 'top' }, title: 'Facturas asociadas'}
      = payment.invoice.folio
      %i{class: 'fa fa-external-link-square'}
  %td
    - if payment.invoice
      = link_to truncate(payment.purchase_order.provider.natural_name, length: 20), provider_path(payment.purchase_order.provider)
      = link_to "/invoices/#{payment.invoice.id}/document", {class: "no-break pull-right", data: { toggle: 'tooltip', placement: 'top' }, title: t('invoice.pdf_message')} do
        = payment.invoice.receipt_folio
        %i{class: 'fa fa-file-pdf-o'}
  %td
    - if payment.purchase_order
      = link_to purchase_order_path(payment.purchase_order), {class: "no-break", type: "button",data: { toggle: 'tooltip', placement: 'top' }, title: t('purchase_order.pdf_message')} do
        = payment.purchase_order.formated_folio
        %i{class: 'fa fa-file-pdf-o'}
  %td
    = link_to requisition_path(payment.requisition), {class: "no-break", data: { toggle: 'tooltip', placement: 'top' }, title: 'Requisici√≥n PDF'} do
      = payment.requisition.formated_folio
      %i{class: 'fa fa-file-pdf-o'}

  %td
    = number_to_currency payment.amount
  %td
    %button{onclick: "window.createBillingAdjusment( #{payment.id},#{payment.amount}, #{payment.paid_amount}, #{payment.construction_id} )",class: 'btn btn-primary circular'}
      %i{class: 'fa fa-info'}
